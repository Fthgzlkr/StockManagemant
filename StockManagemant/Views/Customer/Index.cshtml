@{
    ViewData["Title"] = "MÃ¼ÅŸteri YÃ¶netimi";
    Layout = "_Layout";
}

<link rel="stylesheet" href="~/css/Product.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/GlobalStyles.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/Site.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/CustomerManagement.css" asp-append-version="true" />

<div class="container-fluid">
    <h2 class="mt-4 mb-3">ðŸ‘¤ MÃ¼ÅŸteri YÃ¶netimi</h2>
    
    <div class="table-container">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <div class="table-info">
                <i class="fas fa-info-circle me-1"></i>
                <span class="text-muted small">MÃ¼ÅŸteri kayÄ±tlarÄ±nÄ± gÃ¶rÃ¼ntÃ¼leyebilir, dÃ¼zenleyebilir ve silebilirsiniz</span>
            </div>
            <button id="addCustomerBtn" class="btn btn-success">
                <i class="fas fa-user-plus me-2"></i> MÃ¼ÅŸteri Ekle
            </button>
        </div>
        
        <div class="grid-wrapper">
            <table id="customerGrid"></table>
            <div id="pager"></div>
        </div>
    </div>
</div>

<script>
$(document).ready(function () {
    $("#customerGrid").jqGrid({
        url: '/Customer/GetCustomers',
        datatype: "json",
        mtype: "GET",
        colNames: ['ID', 'MÃ¼ÅŸteri AdÄ±', 'Telefon', 'Email', 'Adres', 'Ä°ÅŸlemler'],
        colModel: [
            { name: 'id', index: 'id', key: true, hidden: true },
            { 
                name: 'name', 
                index: 'name', 
                sortable: true,
                width: 150,
                formatter: function(cellvalue, options, rowObject) {
                    return `<span class="fw-medium">${cellvalue}</span>`;
                }
            },
            { 
                name: 'phone', 
                index: 'phone', 
                sortable: true,
                width: 120,
                formatter: function(cellvalue, options, rowObject) {
                    return cellvalue ? `<a href="tel:${cellvalue}" class="text-decoration-none">${cellvalue}</a>` : '-';
                }
            },
            { 
                name: 'email', 
                index: 'email', 
                sortable: true,
                width: 180,
                formatter: function(cellvalue, options, rowObject) {
                    return cellvalue ? `<a href="mailto:${cellvalue}" class="text-decoration-none">${cellvalue}</a>` : '-';
                }
            },
            { 
                name: 'address', 
                index: 'address', 
                sortable: true,
                width: 200,
                formatter: function(cellvalue, options, rowObject) {
                    return cellvalue && cellvalue.length > 50 ? 
                        `<span title="${cellvalue}">${cellvalue.substring(0, 50)}...</span>` : 
                        (cellvalue || '-');
                }
            },
            {
                name: "actions",
                align: "center",
                width: 80,
                sortable: false,
                formatter: function (cellvalue, options, rowObject) {
                    return `
                        <div class="action-icons">
                            <i class="fa-solid fa-pen text-primary editCustomerBtn" 
                               data-id="${rowObject.id}" 
                               title="MÃ¼ÅŸteriyi DÃ¼zenle"
                               role="button"
                               tabindex="0"></i>
                            <i class="fa-solid fa-trash text-danger deleteCustomerBtn" 
                               data-id="${rowObject.id}" 
                               title="MÃ¼ÅŸteriyi Sil"
                               role="button"
                               tabindex="0"></i>
                        </div>
                    `;
                }
            }
        ],
        pager: '#pager',
        rowNum: 10,
        rowList: [10, 20, 30, 50],
        sortname: 'id',
        sortorder: 'desc',
        viewrecords: true,
        height: 'auto',
        autowidth: true,
        shrinkToFit: true,
        guiStyle: "bootstrap4",
        caption: "ðŸ“‹ MÃ¼ÅŸteri KayÄ±tlarÄ±",
        jsonReader: {
            root: "rows",
            page: "page",
            total: "total",
            records: "records"
        },
        loadComplete: function(data) {
            // Grid yÃ¼klendikten sonra tooltip'leri etkinleÅŸtir
            $('[title]').tooltip();
            
            // BoÅŸ durumda mesaj gÃ¶ster
            if (data.records === 0) {
                $("#customerGrid").closest('.ui-jqgrid-bdiv').append(
                    '<div class="empty-state text-center p-4">' +
                    '<i class="fas fa-users text-muted mb-3" style="font-size: 48px;"></i>' +
                    '<p class="text-muted mt-2 mb-3">HenÃ¼z mÃ¼ÅŸteri kaydÄ± bulunmamaktadÄ±r.</p>' +
                    '<button class="btn btn-outline-primary btn-sm" onclick="$(\'#addCustomerBtn\').click();">' +
                    '<i class="fas fa-user-plus me-2"></i>Ä°lk MÃ¼ÅŸteriyi Ekle</button>' +
                    '</div>'
                );
            }
        },
        beforeRequest: function() {
            // Loading state - bu satÄ±rÄ± kaldÄ±rdÄ±m
        },
        loadError: function() {
            // Error handling
            Swal.fire({
                title: "Hata",
                text: "MÃ¼ÅŸteri verileri yÃ¼klenirken bir hata oluÅŸtu.",
                icon: "error",
                confirmButtonText: "Tamam"
            });
        }
    });

    // Grid boyutlandÄ±rma
    $(window).on('resize', function () {
        $("#customerGrid").setGridWidth($('.table-container').width() - 30);
    });

    // MÃ¼ÅŸteri Silme Ä°ÅŸlemi
    $(document).on("click", ".deleteCustomerBtn", function () {
        const id = $(this).data("id");
        const row = $("#customerGrid").getRowData(id);
        
        Swal.fire({
            title: "Emin misiniz?",
            html: `<strong>${row.name}</strong> adlÄ± mÃ¼ÅŸteriyi silmek istiyor musunuz?<br><small class="text-muted">Bu iÅŸlem geri alÄ±namaz.</small>`,
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#dc3545",
            cancelButtonColor: "#6c757d",
            confirmButtonText: '<i class="fa-solid fa-trash me-1"></i>Evet, Sil',
            cancelButtonText: '<i class="fa-solid fa-times me-1"></i>Ä°ptal',
            reverseButtons: true,
            focusCancel: true
        }).then((result) => {
            if (result.isConfirmed) {
                // Loading gÃ¶ster
                Swal.fire({
                    title: 'Siliniyor...',
                    allowOutsideClick: false,
                    allowEscapeKey: false,
                    showConfirmButton: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });
                
                $.post(`/Customer/Delete/${id}`)
                    .done(function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: "BaÅŸarÄ±lÄ±!",
                                text: response.message || "MÃ¼ÅŸteri baÅŸarÄ±yla silindi.",
                                icon: "success",
                                timer: 2000,
                                showConfirmButton: false
                            });
                            $("#customerGrid").trigger("reloadGrid");
                        } else {
                            Swal.fire({
                                title: "Hata",
                                text: response.message || "MÃ¼ÅŸteri silinirken bir hata oluÅŸtu.",
                                icon: "error",
                                confirmButtonText: "Tamam"
                            });
                        }
                    })
                    .fail(function () {
                        Swal.fire({
                            title: "BaÄŸlantÄ± HatasÄ±",
                            text: "Sunucu ile baÄŸlantÄ± kurulamadÄ±. LÃ¼tfen tekrar deneyin.",
                            icon: "error",
                            confirmButtonText: "Tamam"
                        });
                    });
            }
        });
    });

    // DÃ¼zenleme butonlarÄ± iÃ§in event (eÄŸer varsa)
    $(document).on("click", ".editCustomerBtn", function () {
        const id = $(this).data("id");
        // Orijinal modal aÃ§ma kodunuz buraya gelecek
        // Ã–rnek: $('#editCustomerModal').modal('show'); 
        // veya mevcut edit modal aÃ§ma fonksiyonunuzu Ã§aÄŸÄ±rÄ±n
    });

    // MÃ¼ÅŸteri Ekle butonu
    $("#addCustomerBtn").on("click", function() {
        // Orijinal modal aÃ§ma kodunuz buraya gelecek
        // Ã–rnek: $('#customerModal').modal('show'); 
        // veya mevcut modal aÃ§ma fonksiyonunuzu Ã§aÄŸÄ±rÄ±n
    });

    // Keyboard navigation
    $(document).on('keydown', '.action-icons i', function(e) {
        if (e.key === 'Enter' || e.key === ' ') {
            e.preventDefault();
            $(this).click();
        }
    });
});
</script>

<style>
/* Ek inline styles - acil durumlar iÃ§in */
.grid-wrapper {
    position: relative;
    overflow: hidden;
    border-radius: 8px;
}

.table-info {
    font-size: 13px;
}

.empty-state {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 10;
}

/* Responsive tablo ayarlarÄ± */
@@media (max-width: 768px) {
    .d-flex.justify-content-between {
        flex-direction: column;
        gap: 1rem;
    }
    
    .table-info {
        order: 2;
    }
    
    #addCustomerBtn {
        order: 1;
        align-self: stretch;
    }
}
</style>