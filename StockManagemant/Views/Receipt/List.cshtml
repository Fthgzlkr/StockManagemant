@{
    ViewData["Title"] = "Fiş Listesi";
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@1,700&family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="~/css/receiptlist.css" />
    <link rel="stylesheet" href="~/css/GlobalStyles.css" asp-append-version="true" />
}



@{
    ViewData["Title"] = "Fiş Listesi";
}

<div class="receipt-page">
    <h2>@ViewData["Title"]</h2>

    <div class="date-filter">
        <span class="date-label">Fiş Tarihi Seçin: </span>
        <input type="text" name="daterange" placeholder="Tarih aralığı" value="pickedDate" />
    </div>

    <table id="receiptGrid"></table>
    <div id="receiptPager"></div>


   
</div>

<script>
    let selectedReceiptId = null;
    let startDate = null;
    let endDate = null;

    $(document).ready(function () {
             $("#receiptGrid").jqGrid({
        url: '/Receipt/GetReceipts',
        datatype: "json",
        mtype: "GET",
        colNames: ['Fiş No', 'Tarih', 'Toplam Tutar','İşlemler'],
        colModel: [
            { name: 'id', index: 'id', width: 50, align: "center", sortable: true, key: true,hidden:true },
            { name: 'date', index: 'date', width: 60, align: "center", sortable: true },
            { name: 'totalAmount', index: 'totalAmount', width: 60, align: "right", sortable: true },
                 {
                    name: "actions",
                    label: "İşlemler",
                    align: "center",
                    width:50,
                    align:"center",
                      formatter: function (cellvalue, options, rowObject) {
                        return `
                        <div class="action-icons">
    <i class="fa-solid fa-pen text-primary fa-xs open-category-edit"
       data-id="${rowObject.id}" data-date="${rowObject.date}" title="Düzenle"></i>

                            <i class="fa-solid fa-trash text-danger fa-xs delete-btn"
                                data-id="${rowObject.id}" title="Sil"></i>
                        </div>
                        `;
                    }
                 
                }
        ],
        pager: '#receiptPager',
        rowNum: 10,
        rowList: [10, 20, 30, 50, 100],
        sortname: 'id',
        sortorder: 'asc',
        viewrecords: true,
        height: 'auto',
        loadonce: false,
        autowidth: true,
        shrinkToFit: true,
        guiStyle: "bootstrap4",
        jsonReader: {
            root: "rows",
            page: "page",
            total: "total",
            records: "records"
        },
        onSelectRow: function (id) {
            selectedReceiptId = id; // Seçili satırın ID'sini kaydet
        },
        ondblClickRow: function (rowid) {
            if (rowid) {
                selectedReceiptId = rowid; // ID'yi güncelle
                if (selectedReceiptId) {
                    const title = 'Fiş Detayları';
                    openModal(`/Receipt/Details/${selectedReceiptId}`, title, setupReceiptProductsEvents);
                } else {
                    alert('Lütfen bir satır seçin.');
                }
            }
        }
    });
       
        $("#receiptGrid").jqGrid('navGrid', '#receiptPager',
            { edit: false, add: false, del: false, search: false, refresh: true }
        );

        // Refresh butonu sıfırlama
        $(".ui-pg-button .ui-icon-refresh").parent().on("click", function () {
            startDate = null;
            endDate = null;
            $('input[name="daterange"]').val(""); // Tarih temizleme

            // Grid'i tekrar yükleme kısmı 
            $("#receiptGrid").setGridParam({
                url: `/Receipt/GetReceipts`,
                page: 1
            }).trigger("reloadGrid");
        });

             $(document).on("click", ".delete-btn", function () {
            let id = $(this).data("id");

            Swal.fire({
                title: "Silme İşlemi",
                text: "Bu fişi silmek istediğinize emin misiniz?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Evet, Sil!",
                cancelButtonText: "Hayır, İptal"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Receipt/DeleteReceipt?receiptId=' + id,
                        type: 'POST',
                        success: function (response) {
                            Swal.fire({
                                title: "Başarılı!",
                                text: "Fiş başarıyla silindi.",
                                icon: "success",
                                confirmButtonColor: "#3085d6"
                            });
                            $("#productGrid").trigger("reloadGrid");
                        },
                        error: function (error) {
                            Swal.fire({
                                title: "Hata!",
                                text: "Silme işlemi başarısız oldu!",
                                icon: "error",
                                confirmButtonColor: "#d33"
                            });
                        }
                    });
                }
            });
        });
    });

        $(document).on("click", ".open-category-edit", function () {
        let id = $(this).data("id"); // Seçilen ID'yi al
        let oldDate = $(this).data("date"); // Önceki tarihi al

        Swal.fire({
            title: "Fiş Güncelle",
            html: `
                <label>Yeni Tarih Seç:</label>
                <input type="date" id="receiptDate" class="swal2-input" value="${oldDate}">
            `,
            showCancelButton: true,
            confirmButtonText: "Güncelle",
            cancelButtonText: "İptal",
            preConfirm: () => {
                let newDate = document.getElementById("receiptDate").value;
                if (!newDate) {
                    Swal.showValidationMessage("Lütfen bir tarih seçin!");
                }
                return newDate;
            }
        }).then((result) => {
            if (result.isConfirmed) {
                let newDate = result.value;

                $.ajax({
                    url: "/Receipt/UpdateReceipt",
                    type: "POST",
                    data: { receiptId: id, date: newDate },
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: "Başarılı!",
                                text: "Fiş başarıyla güncellendi.",
                                icon: "success",
                                confirmButtonColor: "#3085d6"
                            });
                            $("#productGrid").trigger("reloadGrid");
                        } else {
                            Swal.fire({
                                title: "Hata!",
                                text: response.message || "Güncelleme işlemi başarısız oldu!",
                                icon: "error",
                                confirmButtonColor: "#d33"
                            });
                        }
                    },
                    error: function (error) {
                        Swal.fire({
                            title: "Hata!",
                            text: "Güncelleme işlemi başarısız oldu!",
                            icon: "error",
                            confirmButtonColor: "#d33"
                        });
                    }
                });
            }
        });
    });


    // DateRangePicker aktif hale getirme
    $(function () {
        $('input[name="daterange"]').daterangepicker({
            opens: 'center',
            minDate: "2025/1/3",
            locale: {
                format: 'YYYY-MM-DD'
            }
        }, function (start, end, label) {
            startDate = start.format('YYYY-MM-DD');
            endDate = end.format('YYYY-MM-DD');

            // Seçilen tarihe göre grid'i güncelle
            $("#receiptGrid").setGridParam({
                url: `/Receipt/GetReceipts?startDate=${startDate}&endDate=${endDate}`,
                page: 1
            }).trigger("reloadGrid");
        });
    });
</script>
